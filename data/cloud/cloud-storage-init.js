db = db.getSiblingDB('analytics-storage');
db['edge-gateways'].insert({ "_id" : "befa2ec0-2e9b-4e97-ad0a-c9fe91c1b55c", "additionalInformation" : [ ], "name" : "Bob", "description" : "Just Bob.", "namespace" : "bob", "macAddress" : "E5-E5-B9-5C-45-10", "location" : { "_id" : ObjectId("5dca8944bc3f8ea43f43301b"), "virtualLocation" : "Bob" }, "dataRouterAndPreprocessorBaseURL" : "http://data-router-and-preprocessor:7777/api", "edgeAnalyticsEngineBaseURL" : "http://edge-analytics-engine:9999/api", "createdAt" : ISODate("2019-11-12T10:28:20.444Z"), "updatedAt" : ISODate("2019-11-12T10:28:20.444Z"), "__v" : 0 });

db = db.getSiblingDB('model-storage');
db['data-kinds'].insert({ "_id" : "3c1f6677-e8b9-40c5-883e-21ac7eb01f0f", "name" : "Temperature (in Celsius) in plain text", "description" : "Temperature values (in Celsius) in plain text format.", "format" : "Plain text", "quantityKind" : "Temperature", "createdAt" : ISODate("2019-11-12T10:29:42.064Z"), "updatedAt" : ISODate("2019-11-12T10:29:42.064Z"), "__v" : 0 });
db['data-kinds'].insert({ "_id" : "1b93805a-769a-4113-8d71-9d4aaa09b821", "name" : "Temperature (in Celsius) in JSON", "description" : "Temperature values (in Celsius) in JSON format.", "format" : "JSON", "quantityKind" : "Temperature", "createdAt" : ISODate("2019-11-12T10:38:14.015Z"), "updatedAt" : ISODate("2019-11-12T10:38:14.015Z"), "__v" : 0 });
db['data-interfaces'].insert({ "_id" : "c993b095-c8d8-4b77-9917-f6403ddbcabc", "name" : "MQTT topic", "description" : "MQTT topics.", "communicationProtocol" : "MQTT", "parameters" : { "_id" : ObjectId("5dca96d1b6b8484fb9655da0"), "parameter" : [ { "_id" : ObjectId("5dca96d1b6b848ab10655da6"), "name" : "protocol", "description" : "The protocol to use to connect to the MQTT broker.", "dataType" : "string", "defaultValue" : "mqtt" }, { "_id" : ObjectId("5dca96d1b6b8489b6d655da5"), "name" : "host", "description" : "The host where the MQTT broker runs.", "dataType" : "string", "defaultValue" : "localhost" }, { "_id" : ObjectId("5dca96d1b6b84875e7655da4"), "name" : "port", "description" : "The port where the MQTT broker listens.", "dataType" : "int", "defaultValue" : "1883" }, { "_id" : ObjectId("5dca96d1b6b8486d13655da3"), "name" : "username", "description" : "The username to use to connect to the MQTT broker.", "dataType" : "string", "defaultValue" : "" }, { "_id" : ObjectId("5dca96d1b6b8486ab8655da2"), "name" : "password", "description" : "The password to use to connect to the MQTT broker.", "dataType" : "string", "defaultValue" : "" }, { "_id" : ObjectId("5dca96d1b6b848d669655da1"), "name" : "topic", "description" : "The MQTT topic.", "dataType" : "string", "defaultValue" : "" } ] }, "createdAt" : ISODate("2019-11-12T11:26:09.369Z"), "updatedAt" : ISODate("2019-11-12T11:26:09.369Z"), "__v" : 0 });
db['data-interfaces'].insert({ "_id" : "4f0d2452-ee6e-444d-b4ba-4781555959e2", "name" : "Kafka topic", "description" : "Kafka topics.", "communicationProtocol" : "Kafka", "parameters" : { "_id" : ObjectId("5dca9709b6b8489be5655da8"), "parameter" : [ { "_id" : ObjectId("5dca9709b6b8485136655dab"), "name" : "host", "description" : "The host where the Kafka broker runs.", "dataType" : "string", "defaultValue" : "localhost" }, { "_id" : ObjectId("5dca9709b6b848092e655daa"), "name" : "port", "description" : "The port where the Kafka broker listens.", "dataType" : "int", "defaultValue" : "9092" }, { "_id" : ObjectId("5dca9709b6b8481098655da9"), "name" : "topic", "description" : "The Kafka topic.", "dataType" : "string", "defaultValue" : "" } ] }, "createdAt" : ISODate("2019-11-12T11:27:05.338Z"), "updatedAt" : ISODate("2019-11-12T11:27:05.338Z"), "__v" : 0 });
db['data-source-definitions'].insert({ "_id" : "b69ecd75-6f16-47a7-934c-5e049663d625", "name" : "Temperature (in Celsius) in plain text over MQTT", "description" : "Temperature (in Celsius) in plain text format over MQTT.", "dataInterfaceReferenceID" : "c993b095-c8d8-4b77-9917-f6403ddbcabc", "dataKindReferenceID" : "3c1f6677-e8b9-40c5-883e-21ac7eb01f0f", "createdAt" : ISODate("2019-11-12T13:59:37.745Z"), "updatedAt" : ISODate("2019-11-12T13:59:37.745Z"), "__v" : 0 });
db['data-source-definitions'].insert({ "_id" : "b3edba48-024e-4d8d-833f-618c21ef1ab7", "name" : "Temperature (in Celsius) in JSON over Kafka", "description" : "Temperature (in Celsius) in JSON format over Kafka.", "dataInterfaceReferenceID" : "4f0d2452-ee6e-444d-b4ba-4781555959e2", "dataKindReferenceID" : "1b93805a-769a-4113-8d71-9d4aaa09b821", "createdAt" : ISODate("2019-11-12T13:59:57.760Z"), "updatedAt" : ISODate("2019-11-12T13:59:57.760Z"), "__v" : 0 });
db['analytics-processor-definitions'].insert({ "_id" : "4a5a7ea6-b18e-4494-81df-3f5301f404b4", "additionalInformation" : [ ], "name" : "Echoer", "description" : "Processors that echo values.", "processorType" : "echo", "version" : "1.0.0", "copyright" : "Athens Information Technology", "processorLocation" : "/processors/echo-1.0.0-jar-with-dependencies.jar", "parameters" : { "_id" : ObjectId("5dca9833b6b8485cfe655dba"), "parameter" : [ ] }, "createdAt" : ISODate("2019-11-12T11:32:03.706Z"), "updatedAt" : ISODate("2019-11-12T11:32:03.706Z"), "__v" : 0 });
